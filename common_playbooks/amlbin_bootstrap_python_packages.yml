# Help start
#  This ansible playbook installs key python packages
#
#  Python packages installed for:
#     Saltstack
#     Supervisor
#     Diamond
#     Others
#
# Help end


- hosts: all
  serial: 5
  gather_facts: yes
  ignore_errors: yes
  any_errors_fatal: false
  max_fail_percentage: 100
  vars:
      project_env: "{{ lookup('env','ANSIBLE_PROJECT_ENV') }}"
      bootstrap_definition_file: "{{ SALT_PROJECT_GIT_PATH }}/environs/{{ ANSIBLE_PROJECT_ENV }}/saltconf/bootstrap.yaml"
  pre_tasks:
    - debug: msg="=======  Setting up baseline python packages  ======"
  roles:
    - { role: prep_read_bootstrap }
    - { role: read_pythonwheels_bootstrap }
    - { role: r_setup_local_temp_storage, when: (bootstrap_definition_content.ansibleprops.collect_artifacts_locally == True) }
    - { role: r_collect_py2wheels_local, when: (bootstrap_definition_content.ansibleprops.collect_artifacts_locally == True) }
    - { role: r_collect_py3wheels_local, when: (bootstrap_definition_content.ansibleprops.collect_artifacts_locally == True) }
    - { role: prep_remote_temp }
    - { role: r_archive_local_temp_wheels, when: (bootstrap_definition_content.ansibleprops.collect_artifacts_locally == True) }
    - { role: r_upload_local_temp_wheels, when: (bootstrap_definition_content.ansibleprops.collect_artifacts_locally == True) }
    - { role: add_pie_pip_index}
    - { role: amlbin_install_wheels_local, when: (bootstrap_definition_content.ansibleprops.collect_artifacts_locally == True) }
    - { role: amlbin_install_wheels_artifactory, when: (bootstrap_definition_content.ansibleprops.collect_artifacts_locally == False) }
